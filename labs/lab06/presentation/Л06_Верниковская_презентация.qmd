---
# Preamble

## Author
author:
  name: Верниковская Екатерина Андреевна
  degrees: DSc
  email: 11322361366@pfur.ru
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6

## Title
title: Презентация по лабораторной работе №6
subtitle: Администрирование сетевых подсистем
license: CC BY
date: 2025-10-05

## Generic options
lang: ru-RU
crossref:
  lof-title: Список иллюстраций
  lot-title: Список таблиц
  lol-title: Листинги

## Fonts 
mainfont: PT Serif 
romanfont: PT Serif 
sansfont: PT Sans 
monofont: PT Mono 
mainfontoptions: Ligatures=TeX 
romanfontoptions: Ligatures=TeX 
sansfontoptions: Ligatures=TeX,Scale=MatchLowercase 
monofontoptions: Scale=MatchLowercase,Scale=0.9

## Formats
format:
### Pdf output format
  beamer:
    toc: true
    toc-title: Содержание
    number-sections: true
    colorlinks: false
    toc-depth: 2
    slide_level: 2
    aspectratio: 169
    section-titles: true
    theme: metropolis
    themeoptions: progressbar=frametitle,sectionpage=progressbar,numbering=fraction
    pdf-engine: xelatex
    fontenc: T2A
#### Language
    babel-lang: russian
    babel-otherlangs: english

### Html output
  revealjs:
    transition: slide
    margin: 0.2
    smaller: false
    output-ext: html
    theme: beige
    logo: _resources/image/logo_rudn.png
---

# Вводная часть

## Цель работы

Целью данной работы является приобретение практических навыков по установке и конфигурированию системы управления базами данных на примере программного обеспечения MariaDB.

## Задание

1. Установить необходимые для работы MariaDB пакеты
2. Настроить в качестве кодировки символов по умолчанию utf8 в базах данных.
3. В базе данных MariaDB создать тестовую базу addressbook, содержащую таблицу city с полями name и city, т.е., например, для некоторого сотрудника указан город, в котором он работает
4. Создать резервную копию базы данных addressbook и восстановить из неё данные
5. Написать скрипт для Vagrant, фиксирующий действия по установке и настройке базы данных MariaDB во внутреннем окружении виртуальной машины server. Соответствующим образом следует внести изменения в Vagrantfile

# Выполнение лабораторной работы

## Установка MariaDB

Загрузили нашу операционную систему и перешли в рабочий каталог с проектом: ```cd /var/tmp/eavernikovskaya/vagrant``` ([рис. @fig-001])

![Рабочий каталог с проектом](image/лаба6_1.png){#fig-001 width=70%}

## Установка MariaDB

Запустили виртуальную машину server: ```make server-up``` ([рис. @fig-002]) 

![Запуск виртуальной машины server](image/лаба6_2.png){#fig-002 width=70%}

## Установка MariaDB

Далее на виртуальной машине server вошли под созданным нами в предыдущей работе пользователем и открыли терминал. Перешли в режим суперпользователя: ```sudo -i``` ([рис. @fig-003])

![Переход в режим суперпользователя](image/лаба6_3.png){#fig-003 width=70%}

## Установка MariaDB

Далее установили необходимые для работы с базами данных пакеты: ```dnf -y install mariadb mariadb-server``` ([рис. @fig-004])

![Установка необходимых пакетов для работы с базами данных](image/лаба6_4.png){#fig-004 width=70%}

## Установка MariaDB

Далее посмотрели конфигурационные файлы mariadb в каталоге */etc/my.cnf.d* и файл */etc/my.cnf* ([рис. @fig-005])

![Файлы в каталоге /etc/my.cnf.d и файл /etc/my.cnf](image/лаба6_5.png){#fig-005 width=40%}

## Установка MariaDB

Далее для запуска и включения программного обеспечения mariadb использовали: ```systemctl start mariadb``` и ```systemctl enable mariadb``` ([рис. @fig-006])

![Запуск и включение mariadb](image/лаба6_6.png){#fig-006 width=70%}

## Установка MariaDB

Далее убедились, что mariadb прослушивает порт 3306: ```ss -tulpen | grep mariadb``` ([рис. @fig-007])

![Порт который прослушивает mariadb](image/лаба6_7.png){#fig-007 width=70%}

## Установка MariaDB

Далее запустили скрипт конфигурации безопасности mariadb: ```mysql_secure_installation```. Установили пароль для пользователя root базы данных, отключили удалённый корневой доступ и удалили тестовую базу данных и любых анонимных пользователей ([рис. @fig-008]), ([рис. @fig-009]), ([рис. @fig-010])

![Запуск скрипта конфигурации безопасности mariadb (1)](image/лаба6_8.png){#fig-008 width=40%}

## Установка MariaDB

![Запуск скрипта конфигурации безопасности mariadb (2)](image/лаба6_9.png){#fig-009 width=70%}

## Установка MariaDB

![Запуск скрипта конфигурации безопасности mariadb (3)](image/лаба6_10.png){#fig-010 width=50%}

## Установка MariaDB

Для входа в базу данных с правами администратора базы данных ввели ```mysql -u root -p``` ([рис. @fig-011])

![Вход в базу данных с правами администратора (1)](image/лаба6_11.png){#fig-011 width=70%}

## Установка MariaDB

Псомотреди список команд MySQL, введя ```\h``` ([рис. @fig-012])

![Список команд MySQL](image/лаба6_12.png){#fig-012 width=50%}

## Установка MariaDB

Из приглашения интерактивной оболочки MariaDB для отображения доступных в настоящее время баз данных ввели MySQL-запрос ```SHOW DATABASES;``` ([рис. @fig-013])

![Доступные базы данных в настоящее время](image/лаба6_13.png){#fig-013 width=40%}

## Установка MariaDB

Для выхода из интерфейса интерактивной оболочки MariaDB ввели ```exit;``` ([рис. @fig-014])

![Выход из интерфейса интерактивной оболочки MariaDB](image/лаба6_14.png){#fig-014 width=70%}

## Конфигурация кодировки символов

Опять вошли в базу данных с правами администратора ```mysql -u root -p``` ([рис. @fig-015])

![Вход в базу данных с правами администратора (2)](image/лаба6_15.png){#fig-015 width=70%}

## Конфигурация кодировки символов

Далее посмотрели статус MariaDB введя ```status``` ([рис. @fig-016])

![Статус MariaDB](image/лаба6_16.png){#fig-016 width=70%}

## Конфигурация кодировки символов

Далее в каталоге */etc/my.cnf.d* создали файл *utf8.cnf* ([рис. @fig-017]): 

![Создание файла utf8.cnf](image/лаба6_17.png){#fig-017 width=70%}

## Конфигурация кодировки символов

Открыв этот файл на редактирование пропишем в нём следующие строки ([рис. @fig-018]):

![Редактирование файла utf8.cnf](image/лаба6_18.png){#fig-018 width=70%}

## Конфигурация кодировки символов

Далее перезапустили MariaDB с помощью ```systemctl restart mariadb``` ([рис. @fig-019])

![Презапуск MariaDB](image/лаба6_19.png){#fig-019 width=70%}

## Конфигурация кодировки символов

Далее опять вошли в базу данных с правами администратора, посмотрели статус MariaDB и поняли что сервер и базы данных теперь используют utf8mb3 вместо latin1, что обеспечивает поддержку Unicode символов и корректное отображение кириллицы и других языков ([рис. @fig-020])

![Статус MariaDB после конфигурации кодировки символов](image/лаба6_20.png){#fig-020 width=50%}

## Создание базы данных

Опять зашли в базу данных с правами администратора ```mysql -u root -p``` ([рис. @fig-021])

![Вход в базу данных с правами администратора (3)](image/лаба6_21.png){#fig-021 width=70%}

## Создание базы данных

Создали базу данных с именем addressbook: ```CREATE DATABASE addressbook CHARACTER SET utf8 COLLATE utf8_general_ci;``` ([рис. @fig-022])

![Создание базы данных с именем addressbook](image/лаба6_22.png){#fig-022 width=70%}

## Создание базы данных

Перешли к базе данных addressbook: ```USE addressbook;``` ([рис. @fig-023])

![Переход к базе данных addressbook](image/лаба6_23.png){#fig-023 width=70%}

## Создание базы данных

Отобразили имеющиеся в базе данных addressbook таблицы: ```SHOW TABLES;``` ([рис. @fig-024])

![Таблицы имеющиеся в базе данных addressbook](image/лаба6_24.png){#fig-024 width=70%}

## Создание базы данных

Создали таблицу city с полями name и city: ```CREATE TABLE city(name VARCHAR(40), city VARCHAR(40));``` ([рис. @fig-025])

![Создание таблицы city](image/лаба6_25.png){#fig-025 width=70%}

## Создание базы данных

Заполнили несколько строк таблицы некоторыми данными по аналогии в соответствии с синтаксисом MySQL ([рис. @fig-026]):

![Заполнение строк таблицы city](image/лаба6_26.png){#fig-026 width=70%}

## Создание базы данных
 
Сделали следующий MySQL-запрос: ```SELECT * FROM city;``` ([рис. @fig-027]) 

![Запрос на выборку всех данных из таблицы city](image/лаба6_27.png){#fig-027 width=70%}

## Создание базы данных

Создали пользователя для работы с базой данных addressbook и задали для него пароль: ```CREATE USER eavernikovskaya@'%' IDENTIFIED BY 'password';``` ([рис. @fig-028])

![Создание пользователя для работы с базой данных addressbook](image/лаба6_28.png){#fig-028 width=70%}

## Создание базы данных

Далее предоставили права доступа созданному пользователю eavernikovskaya на действия с базой
данных addressbook (просмотр, добавление, обновление, удаление данных): ```GRANT SELECT,INSERT,UPDATE,DELETE ON addressbook.* TO eavernikovskaya@'%';``` ([рис. @fig-029])

![Предоставление прав доступа созданному пользователю на действия с базой данных addressbook](image/лаба6_29.png){#fig-029 width=70%}

## Создание базы данных

Обновили привилегии (права доступа) базы данных addressbook: ```FLUSH PRIVILEGES;``` ([рис. @fig-030])

![Обновление прав доступа базы данных addressbook](image/лаба6_30.png){#fig-030 width=70%}

## Создание базы данных

Далее посмотрели общую информацию о табице city базы данных addressbook: ```DESCRIBE city;``` ([рис. @fig-031])

![Общая информация о таблице city базы данных addressbook](image/лаба6_31.png){#fig-031 width=70%}

## Создание базы данных

Далее вышли из окружения MariaDB: ```quit``` ([рис. @fig-032])

![Выход из окружения MariaDB](image/лаба6_32.png){#fig-032 width=70%}

## Создание базы данных

Посмотрели список баз данных: ```mysqlshow -u root -p``` ([рис. @fig-033])

![Список баз данных](image/лаба6_33.png){#fig-033 width=70%}

## Создание базы данных

Посмотрели список таблиц базы данных addressbook: ```mysqlshow -u root -p addressbook``` и ```mysqlshow -u eavernikovskaya -p addressbook``` ([рис. @fig-034]), ([рис. @fig-035])

![Список таблиц базы данных addressbook от администратора](image/лаба6_34.png){#fig-034 width=70%}

## Создание базы данных

![Список таблиц базы данных addressbook от пользователя](image/лаба6_35.png){#fig-035 width=70%}

##  Резервные копии

На виртуальной машине server создали каталог для резервных копий: ```mkdir -p /var/backup``` ([рис. @fig-036])

![Создание каталога для резервных копий](image/лаба6_36.png){#fig-036 width=70%}

##  Резервные копии

Далее сделали резервную копию базы данных addressbook, сжатую резервную копию и сжатую резервную копию с указанием даты ([рис. @fig-037]):

![Создание резервных копий базы данных addressbook](image/лаба6_37.png){#fig-037 width=70%}

##  Резервные копии

Далее аосстановили базу данных addressbook из резервной копии и из сжатой резервной копии ([рис. @fig-038]):

![Восстановление базы данных addressbook из резервных копий](image/лаба6_38.png){#fig-038 width=70%}

## Внесение изменений в настройки внутреннего окружения виртуальной машины

На виртуальной машине server перешли в каталог для внесения изменений в настройки внутреннего окружения */vagrant/provision/server/*, создали в нём каталог *mysql*, в который поместили в соответствующие подкаталоги конфигурационные файлы MariaDB и резервную копию базы данных addressbook ([рис. @fig-039]):

![Копирование конфигурационных файлов и резервных копий базы данных в каталог mysql](image/лаба6_39.png){#fig-039 width=70%}

## Внесение изменений в настройки внутреннего окружения виртуальной машины

В каталоге /vagrant/provision/server создали исполняемый файл mysql.sh ([рис. @fig-040]):

![Создание исполняемого файла mysql.sh](image/лаба6_40.png){#fig-040 width=70%}

## Внесение изменений в настройки внутреннего окружения виртуальной машины

Открыв его на редактирование прописали в нём следующие строки ([рис. @fig-041]):

![Редактирование файла mysql.sh](image/лаба6_41.png){#fig-041 width=40%}

## Внесение изменений в настройки внутреннего окружения виртуальной машины

Для отработки созданного скрипта во время загрузки виртуальных машин в конфигурационном файле Vagrantfile необходимо добавить в конфигурации сервера следующую запись ([рис. @fig-042]):

![Редактирование Vagrantfile](image/лаба6_42.png){#fig-042 width=50%}

## Внесение изменений в настройки внутреннего окружения виртуальной машины

После этого можно выключать виртуальную машину server: ```make server-halt``` ([рис. @fig-043])

![Выключение виртуальной машины server](image/лаба6_43.png){#fig-043 width=70%}

# Подведение итогов

## Выводы

В ходе выполнения лабораторной работы №6 мы приобрели практические навыки по установке и конфигурированию системы управления базами данных на примере программного обеспечения MariaDB.

## Список литературы

1. [Лаборатораня работа №6](https://esystem.rudn.ru/pluginfile.php/2854752/mod_resource/content/6/006-mysql.pdf)
