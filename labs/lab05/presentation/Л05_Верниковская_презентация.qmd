---
# Preamble

## Author
author:
  name: Верниковская Екатерина Андреевна
  degrees: DSc
  email: 11322361366@pfur.ru
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6

## Title
title: Презентация по лабораторной работе №5
subtitle: Администрирование сетевых подсистем
license: CC BY
date: 2025-9-30

## Generic options
lang: ru-RU
crossref:
  lof-title: Список иллюстраций
  lot-title: Список таблиц
  lol-title: Листинги

## Fonts 
mainfont: PT Serif 
romanfont: PT Serif 
sansfont: PT Sans 
monofont: PT Mono 
mainfontoptions: Ligatures=TeX 
romanfontoptions: Ligatures=TeX 
sansfontoptions: Ligatures=TeX,Scale=MatchLowercase 
monofontoptions: Scale=MatchLowercase,Scale=0.9

## Formats
format:
### Pdf output format
  beamer:
    toc: true
    toc-title: Содержание
    number-sections: true
    colorlinks: false
    toc-depth: 2
    slide_level: 2
    aspectratio: 169
    section-titles: true
    theme: metropolis
    themeoptions: progressbar=frametitle,sectionpage=progressbar,numbering=fraction
    pdf-engine: xelatex
    fontenc: T2A
#### Language
    babel-lang: russian
    babel-otherlangs: english

### Html output
  revealjs:
    transition: slide
    margin: 0.2
    smaller: false
    output-ext: html
    theme: beige
    logo: _resources/image/logo_rudn.png
---

# Вводная часть

## Цель работы

Целью данной работы является приобретение практических навыков по расширенному конфигурированию HTTP-сервера Apache в части безопасности и возможности использования PHP.

## Задание

1. Сгенерировать криптографический ключ и самоподписанный сертификат безопасности для возможности перехода веб-сервера от работы через протокол HTTP к работе через протокол HTTPS
2. Настроить веб-сервер для работы с PHP
3. Написать (или скорректировать) скрипт для Vagrant, фиксирующий действия по расширенной настройке HTTP-сервера во внутреннем окружении виртуальной машины server

# Выполнение лабораторной работы

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

Загрузили нашу операционную систему и перешли в рабочий каталог с проектом: ```cd /var/tmp/eavernikovskaya/vagrant``` ([рис. @fig-001])

![Рабочий каталог с проектом](image/лаба5_1.png){#fig-001 width=70%}

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

Запустили виртуальную машину server: ```make server-up``` ([рис. @fig-002]) 

![Запуск виртуальной машины server](image/лаба5_2.png){#fig-002 width=70%}

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

Далее на виртуальной машине server вошли под созданным нами в предыдущей работе пользователем и открыли терминал. Перешли в режим суперпользователя: ```sudo -i``` ([рис. @fig-003])

![Переход в режим суперпользователя](image/лаба5_3.png){#fig-003 width=70%}

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

В каталоге */etc/ssl* создали каталог *private* ([рис. @fig-004])

![Создание каталога private](image/лаба5_4.png){#fig-004 width=70%}

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

Далее сгенерировали ключ и сертификат, используя команду: ```openssl req -x509 -nodes -newkey rsa:2048 -keyout www.eavernikovskaya.net.key -out www.eavernikovskaya.net.crt``` ([рис. @fig-005])

![Генерация ключа и сертификата](image/лаба5_5.png){#fig-005 width=60%}

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

В итоге ключ и сертификат должны быть в соответствующих каталогах */etc/ssl/private/* и */etc/ssl/cert/* ([рис. @fig-006])

![Каталоги для ключа и сертификата](image/лаба5_6.png){#fig-006 width=70%}

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

Для перехода веб-сервера www.eavernikovskaya.net на функционирование через протокол HTTPS требуется изменить его конфигурационный файл. Перешли в каталог с конфигурационными файлами: ```cd /etc/httpd/conf.d``` ([рис. @fig-007])

![Каталог с конфигурационными файлами](image/лаба5_7.png){#fig-007 width=70%}

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

Далее заменили содержимое файла */etc/httpd/conf.d/www.eavernikovskaya.net.conf* на следуюущее ([рис. @fig-008]):

![Содержание файла /etc/httpd/conf.d/www.eavernikovskaya.net.conf](image/лаба5_8.png){#fig-008 width=50%}

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

Далее внесли изменения в настройки межсетевого экрана на сервере, разрешив работу с https ([рис. @fig-009])

![Внесение изменений в настройки межсетевого экрана на сервере, разрешив работу с https](image/лаба5_9.png){#fig-009 width=60%}

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

Далее перезапустили веб-сервер: ```systemctl restart httpd``` ([рис. @fig-010])

![Перезапуск веб-сервера](image/лаба5_10.png){#fig-010 width=70%}

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

После на виртуальной машине client в строке браузера ввели название веб-сервера www.eavernikovskaya.net и убедились, что произошло автоматическое переключение на работу по протоколу HTTPS. ([рис. @fig-011]), ([рис. @fig-012])

![Запуск виртуальной машины client](image/лаба5_11.png){#fig-011 width=70%}

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

![Добавление адреса в постоянные исключения](image/лаба5_12.png){#fig-012 width=40%}

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

Затем посмотрели сожержание сертификата (нажали на значок с замком в адресной строке и кнопку «Подробнее») ([рис. @fig-013]), ([рис. @fig-014]), ([рис. @fig-015])

![Просмотр содержания сертификата (1)](image/лаба5_13.png){#fig-013 width=70%}

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

![Просмотр содержания сертификата (2)](image/лаба5_14.png){#fig-014 width=60%}

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

![Просмотр содержания сертификата (3)](image/лаба5_15.png){#fig-015 width=70%}

## Конфигурирование HTTP-сервера для работы с PHP

Установили пакеты для работы с PHP: ```dnf -y install php``` ([рис. @fig-016])

![Установка пакетов для работы с PHP](image/лаба5_16.png){#fig-016 width=70%}

## Конфигурирование HTTP-сервера для работы с PHP

Далее в каталоге */var/www/html/www.eavernikovskaya.net* заменили файл *index.html* на *index.php* ([рис. @fig-017])

![Змена файла](image/лаба5_17.png){#fig-017 width=70%}

## Конфигурирование HTTP-сервера для работы с PHP

В нём прописали ([рис. @fig-018]):

![Содержание файла index.php](image/лаба5_18.png){#fig-018 width=70%}

## Конфигурирование HTTP-сервера для работы с PHP

Скорректировали права доступа в каталог с веб-контентом: ```chown -R apache:apache /var/www``` ([рис. @fig-019])

![Корректировка прав доступа в каталог с веб-контентом](image/лаба5_19.png){#fig-019 width=70%}

## Конфигурирование HTTP-сервера для работы с PHP

Далее восстановили контекст безопасности в SELinux ([рис. @fig-020])

![Восстановление контекста безопасности в SELinux](image/лаба5_20.png){#fig-020 width=70%}

## Конфигурирование HTTP-сервера для работы с PHP

Перезапустили HTTP-сервер: ```systemctl restart httpd``` ([рис. @fig-021])

![Перезапуск HTTP-сервера](image/лаба5_21.png){#fig-021 width=70%}

## Конфигурирование HTTP-сервера для работы с PHP

Далее на виртуальной машине client в строке браузера введли название веб-сервера www.eavernikovskaya.net и убедились, что была выведена страница с информацией об используемой на веб-сервере версии PHP ([рис. @fig-022])

![Страница об используемой на веб-сервере версии PHP](image/лаба5_22.png){#fig-022 width=70%}

## Внесение изменений в настройки внутреннего окружения виртуальной машины

На виртуальной машине server перешли в каталог для внесения изменений в настройки внутреннего окружения */vagrant/provision/server/http* и в соответствующие каталоги скопировали конфигурационные файлы ([рис. @fig-023])

![Копирование конфигурационных файлов](image/лаба5_23.png){#fig-023 width=70%}

## Внесение изменений в настройки внутреннего окружения виртуальной машины

В имеющийся скрипт */vagrant/provision/server/http.sh* внесли изменения, добавив установку PHP и настройку межсетевого экрана, разрешающую работать с https ([рис. @fig-024]):

![Редактирование скрипта http.sh](image/лаба5_24.png){#fig-024 width=40%}

## Внесение изменений в настройки внутреннего окружения виртуальной машины

После этого можно выключать виртуальные машины server и cliet: ```make server-halt``` и ```make client-halt``` ([рис. @fig-025])

![Выключение виртуальных машин server и client](image/лаба5_25.png){#fig-025 width=70%}

# Подведение итогов

## Выводы

В ходе выполнения лабораторной работы №5 мы приобрели практические навыки по расширенному конфигурированию HTTPсервера Apache в части безопасности и возможности использования PHP.

## Список литературы

1. [Лаборатораня работа №5](https://esystem.rudn.ru/pluginfile.php/2854748/mod_resource/content/8/005-http-adv.pdf)
