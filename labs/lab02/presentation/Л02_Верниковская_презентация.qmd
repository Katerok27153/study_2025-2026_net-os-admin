---
# Preamble

## Author
author:
  name: Верниковская Екатерина Андреевна
  degrees: DSc
  email: 11322361366@pfur.ru
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6

## Title
title: Отчёт по лабораторной работе №2
subtitle: Администрирование сетевых подсистем
license: CC BY
date: 2025-9-09

## Generic options
lang: ru-RU
crossref:
  lof-title: Список иллюстраций
  lot-title: Список таблиц
  lol-title: Листинги

## Fonts 
mainfont: PT Serif 
romanfont: PT Serif 
sansfont: PT Sans 
monofont: PT Mono 
mainfontoptions: Ligatures=TeX 
romanfontoptions: Ligatures=TeX 
sansfontoptions: Ligatures=TeX,Scale=MatchLowercase 
monofontoptions: Scale=MatchLowercase,Scale=0.9

## Formats
format:
### Pdf output format
  beamer:
    toc: true
    toc-title: Содержание
    number-sections: true
    colorlinks: false
    toc-depth: 2
    slide_level: 2
    aspectratio: 169
    section-titles: true
    theme: metropolis
    themeoptions: progressbar=frametitle,sectionpage=progressbar,numbering=fraction
    pdf-engine: xelatex
    fontenc: T2A
#### Language
    babel-lang: russian
    babel-otherlangs: english

### Html output
  revealjs:
    transition: slide
    margin: 0.2
    smaller: false
    output-ext: html
    theme: beige
    logo: _resources/image/logo_rudn.png
---

# Вводная часть

## Цель работы

Целью данной работы является приобретение практических навыков по установке и конфигурированию DNSсервера, усвоение принципов работы системы доменных имён.

## Задание

1. Установить на виртуальной машине server DNS-сервер bind и bind-utils
2. Сконфигурировать на виртуальной машине server кэширующий DNS-сервер 
3. Сконфигурировать на виртуальной машине server первичный DNS-сервер 
4. При помощи утилит dig и host проанализировать работу DNS-сервера 
5. Написать скрипт для Vagrant, фиксирующий действия по установке и конфигурированию DNS-сервера во внутреннем окружении виртуальной машины server. Соответствующим образом внести изменения в Vagrantfile

# Выполнение лабораторной работы

## Установка DNS-сервера

Загрузили нашу операционную систему и перешли в рабочий каталог с проектом: ```cd /var/tmp/eavernikovskaya/vagrant``` ([рис. @fig-001])

![Рабочий каталог с проектом](image/лаба2_1.png){#fig-001 width=70%}

## Установка DNS-сервера

Запустили виртуальную машину server: ```make server-up``` ([рис. @fig-002]) 

![Запуск виртуальной машины server](image/лаба2_2.png){#fig-002 width=70%}

## Установка DNS-сервера

Далее на виртуальной машине server вошли под созданным нами в предыдущей работе пользователем и открыли терминал. Перешли в режим суперпользователя: ```sudo -i``` ([рис. @fig-003])

![Переход в режим суперпользователя](image/лаба2_3.png){#fig-003 width=70%}

## Установка DNS-сервера

Далее установили bind и bind-utils: ```dnf -y install bind bind-utils``` ([рис. @fig-004])

![Установка bind и bind-utils](image/лаба2_4.png){#fig-004 width=70%}

## Установка DNS-сервера

Далее с помощью утилиты *dig* сделаем запрос к DNS-адресу www.yandex.ru: ```dig www.yandex.ru``` ([рис. @fig-005])

## Установка DNS-сервера

![Запрос с помощью утилиты dig](image/лаба2_5.png){#fig-005 width=50%}

## Конфигурирование кэширующего DNS-сервера

Посмотрим содержание файлов */etc/resolv.conf*, */etc/named.conf*, */var/named/named.ca*, */var/named/named.localhost* и */var/named/named.loopback* ([рис. @fig-006]), ([рис. @fig-007]), ([рис. @fig-008]), ([рис. @fig-009]), ([рис. @fig-010])

![Файл /etc/resolv.conf](image/лаба2_6.png){#fig-006 width=70%}

## Конфигурирование кэширующего DNS-сервера

![Файл /etc/named.conf](image/лаба2_7.png){#fig-007 width=70%}

## Конфигурирование кэширующего DNS-сервера

![Файл /var/named/named.ca](image/лаба2_8.png){#fig-008 width=50%}

## Конфигурирование кэширующего DNS-сервера

![Файл /var/named/named.localhost](image/лаба2_9.png){#fig-009 width=70%}

## Конфигурирование кэширующего DNS-сервера

![Файл /var/named/named.loopback](image/лаба2_10.png){#fig-010 width=70%}

## Конфигурирование кэширующего DNS-сервера

Запустили DNS-сервер: ```systemctl start named``` ([рис. @fig-011])

![Запуск DNS-сервера](image/лаба2_11.png){#fig-011 width=70%}

## Конфигурирование кэширующего DNS-сервера

Далее включили запуск DNS-сервера в автозапуск при загрузке системы: ```systemctl enable named``` ([рис. @fig-012])

![Включение запуска DNS-сервера в автозапуск при загрузке системы](image/лаба2_12.png){#fig-012 width=70%}

## Конфигурирование кэширующего DNS-сервера

Теперь выполним команду ```dig @127.0.0.1 www.yandex.ru``` ([рис. @fig-013])

![Команда dig @127.0.0.1 www.yandex.ru](image/лаба2_13.png){#fig-013 width=50%}

## Конфигурирование кэширующего DNS-сервера

Далее сделали DNS-сервер сервером по умолчанию для хоста server и внутренней виртуальной сети. Для этого мы изменили настройки сетевого соединения eth0 в NetworkManager, переключив его на работу с внутренней сетью и указав для него в качестве DNS-сервера по умолчанию адрес 127.0.0.1 ([рис. @fig-014])

![Настройка DNS-сервеа сервером по умолчанию для хочта server и внутренней виртуальной сети](image/лаба2_14.png){#fig-014 width=60%}

## Конфигурирование кэширующего DNS-сервера

Далее перезапустили NetworkManager: ```systemctl restart NetworkManager``` ([рис. @fig-015])

![Перезапуск NetworkManager](image/лаба2_15.png){#fig-015 width=70%}

## Конфигурирование кэширующего DNS-сервера

И проверили наличие изменений в файле */etc/resolv.conf* ([рис. @fig-016])

![Изменения в файле /etc/resolv.conf](image/лаба2_16.png){#fig-016 width=70%}

## Конфигурирование кэширующего DNS-сервера

Теперь нам требовалось настроить направление DNS-запросов от всех узлов внутренней сети, включая запросы от узла server, через узел server. Для мы внесли изменения в файл */etc/named.conf*, заменив строку ```listen-on port 53 { 127.0.0.1; };``` на ```listen-on port 53 { 127.0.0.1; any; };``` и строку ```allow-query { localhost; };``` на ```allow-query { localhost; 192.168.0.0/16; };``` ([рис. @fig-017])

## Конфигурирование кэширующего DNS-сервера

![Редактирование файла /etc/named.conf (1)](image/лаба2_17.png){#fig-017 width=70%}

## Конфигурирование кэширующего DNS-сервера

Далее внесли изменения в настройки межсетевого экрана узла server, разрешив работу с DNS: ```firewall-cmd --add-service=dns``` и  ```firewall-cmd --add-service=dns --permanent``` ([рис. @fig-018])

![Внос изменений в настройки межсетевого экрана узла server, разрешив работу DNS](image/лаба2_18.png){#fig-018 width=70%}

## Конфигурирование кэширующего DNS-сервера

Далее убедились что DNS-запросы идут через узел server, который прослушивает порт 53. Для этого на данном этапе мы использовали команду lsof: ```lsof | grep UDP``` ([рис. @fig-019])

![Проверка что DNS-запросы идут через узел server, который прослушивает порт 53](image/лаба2_19.png){#fig-019 width=70%}

## Конфигурирование кэширующего DNS-сервера

Далее внесём ещё одни изменения в конфигурационный файл *named.conf*. В секцию options добавили перенаправление DNS-запросов на конкрентный DNS-сервер, также добавили некоторые настройки ([рис. @fig-020])

![Редактирование файла /etc/named.conf (2)](image/лаба2_20.png){#fig-020 width=40%}

## Конфигурирование первичного DNS-сервера

Далее скопировали шаблон описания DNS-зон *named.rfc1912.zones* из каталога */etc* в каталог */etc/named* и переименовали его в *eavernikovskaya.net* ([рис. @fig-021])

![Копирование шаблона описания DNS-зон из каталога /etc в каталог /etc/named и его переименование](image/лаба2_21.png){#fig-021 width=70%}

## Конфигурирование первичного DNS-сервера

После включили файл описания зоны */etc/named/eavernikovskaya.net* в конфигурационном файле DNS */etc/named.conf*, добавив в нём в конце строку: ```include "/etc/named/eavernikovskaya.net";``` ([рис. @fig-022])

## Конфигурирование первичного DNS-сервера

![Включение файла описания зоны /etc/named/user.net в конфигурационном файле DNS /etc/named.conf](image/лаба2_22.png){#fig-022 width=40%}

## Конфигурирование первичного DNS-сервера

Далее открыли файл */etc/named/user.net* на редактирование и прописали свою прямую и обратную зоны. Остальные записи в файле */etc/named/eavernikovskaya.net* удалили ([рис. @fig-023])

![Редактирование файла /etc/named/eavernikovskaya.net](image/лаба2_23.png){#fig-023 width=40%}

## Конфигурирование первичного DNS-сервера

После в каталоге */var/named* создали подкаталоги *primary/fz* и *primary/rz*, в которых будут асполагаться файлы прямой и обратной зоны соответственно ([рис. @fig-024])

![Создание каталогов для файлов прямой и обратной зоны](image/лаба2_24.png){#fig-024 width=70%}

## Конфигурирование первичного DNS-сервера

Далее скопировали шаблон прямой DNS-зоны *named.localhost* из каталога */var/named* в каталог */var/named/primary/fz* и переименовали его в eavernikovskaya.net ([рис. @fig-025])

![Копирование шаблона прямой DNS-зоны named.localhost из каталога /var/named в каталог /var/named/primary/fz и его переименование](image/лаба2_25.png){#fig-025 width=70%}

## Конфигурирование первичного DNS-сервера

Далее изменили файл */var/named/primary/fz/eavernikovskaya.net*, указав необходимые DNS-записи для прямой зоны ([рис. @fig-026])

![Редактирование файла /var/named/primary/fz/eavernikovskaya.net](image/лаба2_26.png){#fig-026 width=70%}

## Конфигурирование первичного DNS-сервера

Далее скопировали шаблон обратной DNS-зоны *named.loopback* из каталога */var/named* в каталог */var/named/primary/rz* и переименовали  его в 192.168.1 ([рис. @fig-027]), ([рис. @fig-028])

![Копирование шаблона обратной DNS-зоны named.localhost из каталога /var/named в каталог /var/named/primary/rz и его переименование](image/лаба2_27.png){#fig-027 width=70%}

## Конфигурирование первичного DNS-сервера

![Переименование файла](image/лаба2_28.png){#fig-028 width=70%}

## Конфигурирование первичного DNS-сервера

После изменили файл */var/named/primary/rz/192.168.1*, указав необходимые DNS-записи для обратной зоны ([рис. @fig-029])

![Редактирование файла /var/named/primary/rz/192.168.1](image/лаба2_29.png){#fig-029 width=70%}

## Конфигурирование первичного DNS-сервера

Далее исправили права доступа к файлам в каталогах */etc/named* и */var/named*, чтобы демон named мог с ними работать: ```chown -R named:named /etc/named``` и ```chown -R named:named /var/named``` ([рис. @fig-030])

![Изменение прав доступа к файлам в каталогах /etc/named и /var/named](image/лаба2_30.png){#fig-030 width=70%}

## Конфигурирование первичного DNS-сервера

Далее после изменения доступа к конфигурационным файлам named восстановили их метки в SELinux: ```restorecon -vR /etc``` и ```restorecon -vR /var/named``` ([рис. @fig-031])

![Восстановление метов в SELinux](image/лаба2_31.png){#fig-031 width=70%}

## Конфигурирование первичного DNS-сервера

Проверили состояния переключателей SELinux, относящихся к named с помощью ```getsebool -a | grep named``` ([рис. @fig-032])

![Проверка состояния переключателей SELinux, относящихся к named](image/лаба2_32.png){#fig-032 width=70%}

## Конфигурирование первичного DNS-сервера

Дали named разрешение на запись в файлы DNS-зоны: ```setsebool named_write_master_zones 1``` и ```setsebool -P named_write_master_zones 1``` ([рис. @fig-033])

![Разрешение на запись в файлы DNS-зоны для named](image/лаба2_33.png){#fig-033 width=70%}

## Конфигурирование первичного DNS-сервера

Далее в дополнительном терминале запустили в режиме реального времени расширенный лог системных сообщений, чтобы проверить корректность работы системы: ```journalctl -x -f``` ([рис. @fig-034]), ([рис. @fig-035])

![Лог системных сообщений. Есть ошибки :(](image/лаба2_34.png){#fig-034 width=50%}

## Конфигурирование первичного DNS-сервера

![Статус named](image/лаба2_35.png){#fig-035 width=70%}

## Конфигурирование первичного DNS-сервера

После обнаружения ошибок, устранили их и в первом терминале перезапустили DNS-сервер: ```systemctl restart named``` ([рис. @fig-036]), ([рис. @fig-037])

![Перезапуск DNS-сервера](image/лаба2_36.png){#fig-036 width=70%}

## Конфигурирование первичного DNS-сервера

![Лог системных сообщений. Без ошибок :)](image/лаба2_37.png){#fig-037 width=70%}

## Анализ работы DNS-сервера

При помощи утилиты *dig* получили описание DNS-зоны с сервера ns.eavernikovskaya.net с помощью ```dig ns.user.net``` ([рис. @fig-038])

![Получение описания DNS-зоны с сервера ns.eavernikovskaya.net](image/лаба2_38.png){#fig-038 width=50%}

## Анализ работы DNS-сервера 

Далее при помощи команды *host* проанализировали корректность работы DNS-сервера ([рис. @fig-039]), ([рис. @fig-040]), ([рис. @fig-041]), ([рис. @fig-042])

![Команда host -l eavernikovskaya.net](image/лаба2_39.png){#fig-039 width=70%}

## Анализ работы DNS-сервера

![Команда host -a eavernikovskaya.net](image/лаба2_40.png){#fig-040 width=70%}

## Анализ работы DNS-сервера

![Команда host -t A eavernikovskaya.net](image/лаба2_41.png){#fig-041 width=70%}

## Анализ работы DNS-сервера

![Команда host -t PTR 192.168.1.1](image/лаба2_42.png){#fig-042 width=70%}

## Внесение изменений в настройки внутреннего окружения виртуальной машины

Далее на виртуальной машине server перещли в каталог для внесения изменений в настройки внутреннего окружения */vagrant/provision/server/*, создали в нём каталог *dns*, в который пместили в соответствующие каталоги конфигурационные файлы DNS ([рис. @fig-043]), ([рис. @fig-044])

![Создание каталога dns с нужными файлами](image/лаба2_43.png){#fig-043 width=70%}

## Внесение изменений в настройки внутреннего окружения виртуальной машины

![Структура каталога dns](image/лаба2_44.png){#fig-044 width=50%}

## Внесение изменений в настройки внутреннего окружения виртуальной машины

Далее в каталоге */vagrant/provision/server* создали исполняемый файл *dns.sh*: ```touch dns.sh``` и ```chmod +x dns.sh``` ([рис. @fig-045])

![Создание исполняемого файла dns.sh](image/лаба2_45.png){#fig-045 width=70%}

## Внесение изменений в настройки внутреннего окружения виртуальной машины

Далее отредактирвали файл *dns.sh*, прописав в нём этот скрипт ([рис. @fig-046])

![Редактирование файла dns.sh](image/лаба2_46.png){#fig-046 width=40%}

## Внесение изменений в настройки внутреннего окружения виртуальной машины

Для отработки созданного скрипта во время загрузки виртуальной машины server в конфигурационном файле *Vagrantfile* добавили в разделе конфигурации для сервера: ([рис. @fig-047])

![Редактирование файла Vagrantfile](image/лаба2_47.png){#fig-047 width=50%}

# Подведение итогов

## Выводы

В ходе выполнения лабораторной работы №2 мы приобрели практические навыки по установке и конфигурированию DNSсервера, а также усвоили принципы работы системы доменных имён.

## Список литературы

1. [Лаборатораня работа №2](https://esystem.rudn.ru/pluginfile.php/2854732/mod_resource/content/8/002-dns.pdf)
